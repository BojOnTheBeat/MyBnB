create table User 
	(sin int(9) NOT NULL,
	name varchar(32) NOT NULL,
	uaddr varchar(50) NOT NULL,
	dob date NOT NULL CHECK(YEAR(dob) <= 1998),
	occupation varchar(32),
	PRIMARY KEY (sin),
	UNIQUE (uaddr));


delimiter |
CREATE TRIGGER UserIns BEFORE INSERT ON User
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF YEAR(NEW.dob) > 1998 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45000' set message_text = msg;
END IF;
END 
|
delimiter ;

delimiter |
CREATE TRIGGER UserUpd BEFORE UPDATE ON User
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF YEAR(NEW.dob) > 1998 THEN 
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45001' set message_text = msg;
END IF;
END
|
delimiter ;


create table Renter
	(sin int(9) NOT NULL,
	creditCard varchar(16) NOT NULL UNIQUE,
	FOREIGN KEY (sin) REFERENCES User(sin) ON UPDATE CASCADE ON DELETE CASCADE);

create table Host
	(sin int(9) NOT NULL,
	FOREIGN KEY (sin) REFERENCES User(sin) ON UPDATE CASCADE ON DELETE CASCADE);

create table Listing
	(host_sin int(9) NOT NULL REFERENCES User (sin),
	lid int NOT NULL AUTO_INCREMENT,
	type varchar(32) NOT NULL,
	laddr varchar(50) NOT NULL,
	postal_code varchar(9) NOT NULL,
	lat DECIMAL(4,2) NOT NULL,
	lon DECIMAL(4,2) NOT NULL,
	city varchar(20) NOT NULL,
	country varchar(20) NOT NULL,
	UNIQUE (laddr),
	PRIMARY KEY (lid));

create table Amenities
	(aid int NOT NULL AUTO_INCREMENT,
	a_type varchar(50) NOT NULL,
	rev_inc int NOT NULL,
	PRIMARY KEY (aid));

//Supported Amenities(and suggested price increases):
//(Wifi, 40), (laundry, 5), (kitchen, 30), (Air conditioning, 20), (wheelchair access, 10), (gym, 30), (heating, 20), (workspace, 10)
//(24-hour checkin, 40), (parking, 20), (pool, 10), (tv, 15), (smoke detector, 5)

create table ListingAmenities
	(lid int NOT NULL REFERENCES Listing(lid) ON DELETE CASCADE,
	aid int(50) NOT NULL REFERENCES Amenities(aid),
	PRIMARY KEY (lid, aid));

create table ListingAvailability
	(lid int NOT NULL REFERENCES Listing(lid) ON DELETE CASCADE,
	ldate date NOT NULL,
	price int NOT NULL,
	PRIMARY KEY(lid, ldate));

create table Booking
	(rsin int(9) NOT NULL REFERENCES Renter(sin),
	lid int NOT NULL REFERENCES Listing(lid),
	startDate date NOT NULL REFERENCES ListingAvailability(ldate),
	endDate date NOT NULL REFERENCES ListingAvailability(ldate),
	isCancelled boolean DEFAULT 0,
	PRIMARY KEY (rsin, startDate, endDate));

create table ExperienceComment
	(rsin int(9) NOT NULL REFERENCES Renter(sin),
	lid int NOT NULL REFERENCES Listing(lid),
	comment varchar(256) NOT NULL,
	rating int CHECK(rating >= 1 AND rating <= 5),
	PRIMARY KEY (sin, lid));

//Java syntax is a litte different
delimiter |
CREATE TRIGGER expCommIns BEFORE INSERT ON ExperienceComment
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF NEW.rating < 1 OR NEW.rating > 5 THEN
SET msg = 'Constraints violated! - expCommIns';
SIGNAL sqlstate '45000' set message_text = msg;
END IF;
END 
|
delimiter ;

delimiter |
CREATE TRIGGER expCommUpd BEFORE UPDATE ON ExperienceComment
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF NEW.rating < 1 OR NEW.rating > 5 THEN
SET msg = 'Constraints violated! - expCommUpd';
SIGNAL sqlstate '45001' set message_text = msg;
END IF;
END
|
delimiter ;

create table RenterComment
	(host_sin int(9) NOT NULL REFERENCES Host(sin),
	rsin int(9) NOT NULL REFERENCES Renter(sin),
	comment varchar(256) NOT NULL,
	rating int CHECK(rating >= 1 AND rating <= 5),
	PRIMARY KEY (host_sin, rsin));




